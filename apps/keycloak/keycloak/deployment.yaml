---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.37.0
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 keycloak-postgres-rw.keycloak.svc.cluster.local 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.3.5
          args:
            - start
          env:
            - name: KC_HOSTNAME
              value: https://sso.${BASE_DOMAIN}
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              valueFrom:
                secretKeyRef:
                  name: keycloak-postgres-app
                  key: jdbc-uri
            - name: KC_HEALTH_ENABLED
              value: "true"
          envFrom:
            - secretRef:
                name: keycloak
          volumeMounts:
            - name: keycloak-providers
              mountPath: /opt/keycloak/providers
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /health
              port: 9000
            initialDelaySeconds: 30
            timeoutSeconds: 1
            failureThreshold: 60
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
            initialDelaySeconds: 0
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
            initialDelaySeconds: 10
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1Gi
      restartPolicy: Always
      automountServiceAccountToken: false
      volumes:
        - name: keycloak-providers
          persistentVolumeClaim:
            claimName: keycloak-providers
