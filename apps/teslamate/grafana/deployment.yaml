---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teslamate-grafana
  namespace: teslamate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teslamate-grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: teslamate-grafana
    spec:
      initContainers:
        - name: wait-for-database
          image: busybox:1.37.0
          command:
            - sh
            - -c
            - |
              echo 'Waiting for PostgreSQL to become ready...'
              until printf "." && nc -z -w 2 teslamate-postgres-17-r.teslamate.svc.cluster.local 5432; do
                  sleep 2;
              done;
              echo 'PostgreSQL OK âœ“'
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: teslamate-grafana
          image: teslamate/grafana:2.0.0
          env:
            - name: GF_SERVER_DOMAIN
              value: teslamate-grafana.${BASE_DOMAIN}
            - name: GF_SERVER_ROOT_URL
              value: https://teslamate-grafana.${BASE_DOMAIN}
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "false"
            - name: GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "false"
            - name: GF_AUTH_DISABLE_LOGIN_FORM
              value: "true"
            - name: GF_AUTH_OAUTH_AUTO_LOGIN
              value: "true"
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_ALLOW_SIGNUP
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: "${BASE_DOMAIN} SSO"
            - name: GF_AUTH_GENERIC_OAUTH_SCOPES
              value: openid profile email
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: contains(roles[*], 'admins') && 'Admin' || 'Viewer'
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: https://sso.${BASE_DOMAIN}/realms/master/protocol/openid-connect/auth
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: https://sso.${BASE_DOMAIN}/realms/master/protocol/openid-connect/token
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: https://sso.${BASE_DOMAIN}/realms/master/protocol/openid-connect/userinfo
            - name: GF_AUTH_SIGNOUT_REDIRECT_URL
              value: https://sso.${BASE_DOMAIN}/realms/master/protocol/openid-connect/logout
            - name: DATABASE_HOST
              value: teslamate-postgres-17-r.teslamate.svc.cluster.local
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: teslamate-postgres-17-app
                  key: username
            - name: DATABASE_PASS
              valueFrom:
                secretKeyRef:
                  name: teslamate-postgres-17-app
                  key: password
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: teslamate-postgres-17-app
                  key: dbname
          envFrom:
            - secretRef:
                name: teslamate-grafana
          ports:
            - containerPort: 3000
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 3000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      restartPolicy: Always
      automountServiceAccountToken: false
